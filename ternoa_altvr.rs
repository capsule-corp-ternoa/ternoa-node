
//! Autogenerated weights for `ternoa_altvr`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2021-11-19, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// target/release/ternoa
// benchmark
// --chain
// dev
// --execution=wasm
// --extrinsic=*
// --pallet=ternoa_altvr
// --steps=50
// --repeat=20
// --heap-pages=4096
// --output
// .


#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for ternoa_altvr.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> ternoa_altvr::WeightInfo for WeightInfo<T> {
	// Storage: Altvr Altvrs (r:0 w:1)
	fn create_altvr() -> Weight {
		(34_000_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Altvr Altvrs (r:1 w:1)
	fn update_username() -> Weight {
		(36_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	// Storage: Altvr Altvrs (r:1 w:1)
	fn update_vchatname() -> Weight {
		(37_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}
