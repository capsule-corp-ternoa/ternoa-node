
//! Autogenerated weights for `ternoa_auctions`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-01-24, STEPS: `1`, REPEAT: 1, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// target/release/ternoa
// benchmark
// --chain
// dev
// --execution=wasm
// --wasm-execution
// compiled
// --extrinsic=*
// --pallet=ternoa_auctions
// --steps=1
// --repeat=1
// --heap-pages=4096
// --output
// .

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `ternoa_auctions`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> ternoa_auctions::WeightInfo for WeightInfo<T> {
	// Storage: Nfts Data (r:1 w:1)
	// Storage: Marketplace Marketplaces (r:1 w:0)
	// Storage: Auctions Auctions (r:0 w:1)
	fn create_auction() -> Weight {
		(32_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Auctions Auctions (r:1 w:1)
	// Storage: Nfts Data (r:1 w:1)
	fn cancel_auction() -> Weight {
		(25_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Auctions Auctions (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn add_bid() -> Weight {
		(52_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Auctions Auctions (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn remove_bid() -> Weight {
		(46_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Auctions Auctions (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn increase_bid() -> Weight {
		(39_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Auctions Auctions (r:1 w:1)
	// Storage: Marketplace Marketplaces (r:1 w:0)
	// Storage: System Account (r:2 w:2)
	// Storage: Nfts Data (r:1 w:1)
	fn buy_it_now() -> Weight {
		(65_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Auctions Auctions (r:1 w:1)
	// Storage: Marketplace Marketplaces (r:1 w:0)
	// Storage: System Account (r:2 w:2)
	// Storage: Nfts Data (r:1 w:1)
	fn complete_auction() -> Weight {
		(87_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Auctions Auctions (r:1 w:1)
	// Storage: System Account (r:2 w:2)
	fn claim_bid() -> Weight {
		(42_000_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
}
