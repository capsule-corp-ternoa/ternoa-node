[package]
name = "ternoa-service"
authors = [ "Ternoa" ]
edition = "2021"
version = "1.1.1"

[dependencies]

# Frame
pallet-transaction-payment-rpc = { workspace = true }
pallet-im-online = { workspace = true }
pallet-staking = { workspace = true }

pallet-contracts = { workspace = true }
pallet-contracts-rpc = { workspace = true }

# Substrate
substrate-frame-rpc-system = { workspace = true }
substrate-state-trie-migration-rpc = { workspace = true }

# Sp
sp-core = { workspace = true }
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-blockchain = { workspace = true }
sp-consensus = { workspace = true }
sp-keystore = { workspace = true }
sp-runtime = { workspace = true }
sp-timestamp = { workspace = true }
sp-consensus-babe = { workspace = true }
sp-transaction-storage-proof = { workspace = true }
sp-authorship = { workspace = true }
sp-authority-discovery = { workspace = true }
sp-finality-grandpa = { workspace = true }

# Sc
sc-basic-authorship = { workspace = true }
sc-chain-spec = { workspace = true }
sc-client-api = { workspace = true }
sc-consensus = { workspace = true }
sc-executor = { workspace = true }
sc-finality-grandpa = { workspace = true }
sc-network = { workspace = true }
sc-network-common = { workspace = true }
sc-rpc = { workspace = true }
sc-rpc-api = { workspace = true }
sc-service = { workspace = true, default-features = false }
sc-telemetry = { workspace = true }
sc-transaction-pool = { workspace = true }
sc-transaction-pool-api = { workspace = true }
sc-finality-grandpa-rpc = { workspace = true }
sc-consensus-babe = { workspace = true }
sc-consensus-babe-rpc = { workspace = true }
sc-consensus-epochs = { workspace = true }
sc-authority-discovery = { workspace = true }
sc-sync-state-rpc = { workspace = true }
sc-consensus-slots = { workspace = true }
sc-consensus-uncles = { workspace = true }

# Benchmarking
frame-benchmarking = { workspace = true }
frame-benchmarking-cli = { workspace = true }

# Rest
futures = { workspace = true, features = [ "compat" ] }
jsonrpsee = { workspace = true, features = ["server"] }
serde = { workspace = true, features = [ "derive" ] }

# Ternoa
ternoa-core-primitives = { path = "../../core-primitives" }
ternoa-client = { path = "../client", default-features = false, optional = true }

# Ternoa Runtime Constants
alphanet-runtime-constants = { path = "../../runtime/alphanet/constants", optional = true }
mainnet-runtime-constants = { path = "../../runtime/mainnet/constants", optional = true }

# Ternoa Runtimes
alphanet-runtime = { path = "../../runtime/alphanet", optional = true }
mainnet-runtime = { path = "../../runtime/mainnet", optional = true }

[features]
default = [ "db", "full-node", "mainnet-native"]
full-node = [ "ternoa-client" ]
db = [
	"sc-service/rocksdb"
]

alphanet-native = [ "alphanet-runtime", "alphanet-runtime-constants", "ternoa-client/alphanet" ]
mainnet-native = [ "mainnet-runtime", "mainnet-runtime-constants", "ternoa-client/mainnet" ]
runtime-benchmarks = [
	"alphanet-runtime/runtime-benchmarks",
	"mainnet-runtime/runtime-benchmarks",
]

try-runtime = [
	"alphanet-runtime/try-runtime",
	"mainnet-runtime/try-runtime",
]