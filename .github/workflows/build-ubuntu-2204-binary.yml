name: Build Ubuntu 22.04 Binary
on:
    workflow_dispatch
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # cancel concurrent builds on the same branch
    concurrency:
      group: ${{ github.head_ref || github.run_id }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Get submodules
        run: git submodule update --init --recursive

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2022-04-24
          components: rustfmt, llvm-tools-preview
          target: wasm32-unknown-unknown
          default: true

      - name: Cache restore
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Clean
        if: ${{ github.event.inputs.CLEAN_BUILD == 'true' }}
        run: cargo clean

      - name: Check format
        run: cargo fmt --all -- --check

      - name: Check release
        run: cargo check --release

      - name: Build
        run: cargo build --locked --release


# name: Build Ubuntu 22.04 Binary

# on:
#   workflow_dispatch:

# env:
#   CARGO_TERM_COLOR: always

# jobs:

#   build:
#     runs-on: ubuntu-latest
#     name: Build Ubuntu 2204 Binary
#     steps:
#     - uses: actions/checkout@v3

#     - name: "Build DockerImage"
#       run: podman build -t tchain -f ./dockerimages/ubuntu-2204.Dockerfile .

#     - name: "Create output folder."
#       run: mkdir output

#     - name: "Run Build Binary Script"
#       run: podman run --rm -v ./output:/output -t tchain

#     - name: Upload Artifacts
#       uses: actions/upload-artifact@v3
#       with:
#         name: assets-for-download
#         path: output

    
# # name: Build Ubuntu 22.04 Binary

# # on:
# #   workflow_dispatch:
# #     inputs:
# #       ubuntu_version:
# #         description: 'Ubuntu Version'
# #         required: true
# #         default: '22.04'

# # env:
# #   CARGO_TERM_COLOR: always

# # jobs:
# #   call-start-new-build-machine:
# #     uses: ./.github/workflows/start-new-build-machine.yml
# #     secrets: inherit

# #   build:
# #     runs-on: ubuntu-latest
# #     name: Build Ubuntu 2204 Binary
# #     steps:
# #     - uses: actions/checkout@v3

# #     - name: "Build DockerImage"
# #       run: podman build -t tchain -f ./dockerimages/ubuntu-2204.Dockerfile .

# #     - name: "Create output folder."
# #       # run: mkdir output
# #       #     - name: Create Output Folder
# #       run: |
# #         mkdir output
# #         sudo chown $USER output

# #     - name: "Run Build Binary Script"
# #       run: podman run --rm -v ./output:/output -t tchain

# #     - name: Upload Artifacts
# #       uses: actions/upload-artifact@v3
# #       with:
# #         name: assets-for-download
# #         path: output

# # name: Build Ubuntu 22.04 Binary

# # on:
# #   workflow_dispatch:
# #     inputs:
# #       ubuntu_version:
# #         description: 'Ubuntu Version'
# #         required: true
# #         default: '22.04'

# # jobs:
# #   build:
# #     runs-on: ubuntu-latest
# #     name: Build Ubuntu 22.04 Binary
# #     steps:
# #       - name: Checkout Repository
# #         uses: actions/checkout@v3

# #       - name: Set up Podman
# #         run: |
# #           sudo apt-get update
# #           sudo apt-get install -y podman

# #       - name: Build Podman Image
# #         run: |
# #           podman build \
# #             --platform linux/amd64 \
# #             --tag tchain \
# #             -f ./dockerimages/ubuntu-2204.Dockerfile \
# #             --log-level debug \
# #             --events-backend file

# #       - name: Create Output Folder
# #         run: |
# #           mkdir output
# #           sudo chown $USER output

# #       - name: Run Build Binary Script
# #         run: |
# #           podman run --rm \
# #             -v ${{ github.workspace }}/output:/output \
# #             -t tchain

# #       - name: Upload Artifacts
# #         uses: actions/upload-artifact@v2
# #         with:
# #           name: assets-for-download
# #           path: output
