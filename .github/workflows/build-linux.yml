# CI for Chain on Linux Environment
name: Build Ternoa Client Linux

on:
  push:
    tags:
      - v1.*
  workflow_dispatch:
    inputs:
      ignoreLevel:
        description: 'Ignore'
        default: 'ignore'
        type: choice
        options:
        - ignore

env:
  CARGO_TERM_COLOR: always

jobs:
  start:
    runs-on: ubuntu-latest
    name: Start Build Machine
    steps:
    - name: Get SCW
      run: sudo curl -o /usr/local/bin/scw -L "https://github.com/scaleway/scaleway-cli/releases/download/v2.5.1/scaleway-cli_2.5.1_linux_amd64"

    - name: Allow executing file as program
      run: sudo chmod +x /usr/local/bin/scw

    - name: Init SCW
      run: scw init secret-key=${{ secrets.SW_CHAIN_REFERENCE_PROJ_SECRET_KEY }} install-autocomplete=false send-telemetry=true

    - name: Start Machine
      run: scw instance server reboot 829c4423-0baa-4849-b081-da68a66cdff6

    - name: Wait for stable state
      run: scw instance server wait 829c4423-0baa-4849-b081-da68a66cdff6

  build:
    runs-on: ternoa-build-machine-0
    name: Build Binary Job
    needs: start
    steps:
    - uses: actions/checkout@v3

    - name: Build the Ternoa client
      run: /root/.cargo/bin/cargo build --release

    - name: Configure AWS credentials from Test account
      uses: s3-actions/s3cmd@v0
      with:
        provider: "aws"
        access_key: ${{ secrets.SW_ACCESS_KEY_ID }}
        secret_key: ${{ secrets.SW_SECRET_ACCESS_KEY }}
        region: fr-par
        
    - name: Copy Binary to Scaleway Bucket /chain/${GITHUB_REF##*/}/latest
      run: |
        s3cmd sync ./target/release/ternoa s3://ternoa/chain/${GITHUB_REF##*/}/linux/ternoa --host https://s3.fr-par.scw.cloud --host-bucket https://s3.fr-par.scw.cloud --acl-public

    - name: Copy Binary to Scaleway Bucket  ${{ github.sha }}.zip
      run: |
        s3cmd sync ./target/release/ternoa s3://ternoa/chain/${GITHUB_REF##*/}/linux/${{ github.sha }} --host https://s3.fr-par.scw.cloud --host-bucket https://s3.fr-par.scw.cloud --acl-public
        
    - name: Notify Ops
      uses: craftech-io/slack-action@v1
      with:
        slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always()

  stop:
    runs-on: ubuntu-latest
    name: Stop Build Machine
    needs: build
    steps:
    - name: Get SCW
      run: sudo curl -o /usr/local/bin/scw -L "https://github.com/scaleway/scaleway-cli/releases/download/v2.5.1/scaleway-cli_2.5.1_linux_amd64"

    - name: Allow executing file as program
      run: sudo chmod +x /usr/local/bin/scw

    - name: Init SCW
      run: scw init secret-key=${{ secrets.SW_CHAIN_REFERENCE_PROJ_SECRET_KEY }} install-autocomplete=false send-telemetry=true

    - name: Stop Machine
      run: scw instance server stop 829c4423-0baa-4849-b081-da68a66cdff6

    - name: Wait for stable state
      run: scw instance server wait 829c4423-0baa-4849-b081-da68a66cdff6