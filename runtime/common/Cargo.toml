[package]
name = "ternoa-runtime-common"
version.workspace = true
authors.workspace = true
edition.workspace = true
license.workspace = true

[dependencies]
## Substrate Frame
frame-support = { workspace = true, default-features = false }
frame-system = { workspace = true, default-features = false }
pallet-election-provider-multi-phase = { workspace = true, default-features = false }
pallet-transaction-payment = { workspace = true, default-features = false }
frame-election-provider-support = { workspace = true, default-features = false }
pallet-staking = { workspace = true, default-features = false }
pallet-babe = { workspace = true, default-features = false }
pallet-balances = { workspace = true, default-features = false }
pallet-treasury = { workspace = true, default-features = false }
pallet-authorship = { workspace = true, default-features = false }

# Substrate Primitives
sp-npos-elections = { workspace = true, default-features = false }
sp-runtime = { workspace = true, default-features = false }
sp-std = { workspace = true, default-features = false }
sp-staking = { workspace = true, default-features = false }
sp-consensus-babe = { workspace = true, default-features = false }

# Rest
static_assertions = { workspace = true }

# Ternoa
ternoa-core-primitives = { path = "../../core-primitives", default-features = false }

[features]
default = ["std"]
std = [
    "ternoa-core-primitives/std",
    "sp-npos-elections/std",
    "frame-support/std",
    "frame-system/std",
    "pallet-election-provider-multi-phase/std",
    "sp-runtime/std",
    "sp-std/std",
    "pallet-transaction-payment/std",
    "frame-election-provider-support/std",
    "sp-staking/std",
    "pallet-staking/std",
    "sp-consensus-babe/std",
    "pallet-babe/std",
    "pallet-balances/std",
    "pallet-treasury/std",
    "pallet-authorship/std",
]